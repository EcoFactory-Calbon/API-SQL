name: Android PR Checks

on:
  pull_request:
    branches: [dev, hml, prd, main]
  pull_request_target:
    branches: [dev, hml, prd, main]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33
        build-tools-version: '33.0.2'
        cmake-version: '3.22.1'
        ndk-version: '25.1.8937393'
        emulator-build: 10215579

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Verify Gradle setup
      run: ./gradlew --version

    - name: Check code formatting with ktlint
      run: ./gradlew ktlintCheck --no-daemon
      continue-on-error: true

    - name: Run detekt static analysis
      run: ./gradlew detekt --no-daemon
      continue-on-error: true

    - name: Run Android lint
      run: ./gradlew lintDebug --no-daemon
      continue-on-error: true

    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-reports-${{ github.event.pull_request.number }}
        path: |
          app/build/reports/ktlint/
          app/build/reports/detekt/
          app/build/reports/lint/

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run all unit tests
      run: |
        chmod +x ./gradlew
        ./gradlew testDebugUnitTest --no-daemon --console=verbose

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ github.event.pull_request.number }}
        path: app/build/reports/tests/

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Build debug variant
      run: |
        chmod +x ./gradlew
        ./gradlew assembleDebug --no-daemon --console=verbose

    - name: Build release variant
      run: ./gradlew assembleRelease --no-daemon --console=verbose

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts-${{ github.event.pull_request.number }}
        path: |
          app/build/outputs/apk/
          app/build/outputs/bundle/

  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 15

    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Check for vulnerable dependencies
      run: |
        chmod +x ./gradlew
        ./gradlew dependencyCheckAnalyze --no-daemon
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ github.event.pull_request.number }}
        path: app/build/reports/dependency-check/
